{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Barefoot Nomad ",
    "description": "Barefoot Nomad  Project Application API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "basePath": "/",
  "tags": [
    {
      "name": "barefoot Nomad company",
      "description": "API for barefoot-Nomad system"
    }
  ],
  "schemes": ["http", "https"],
  "consumes": ["application/json", "form-data"],
  "produces": ["application/json"],

  "paths": {
    "/api/v1/user": {
      "get": {
        "tags": ["user router"],
        "description": "Get user information by id",
        "parameters": [
          {
            "name": "Authorization",
            "in": "headers",
            "required": "true",
            "description": "A login jwt token should be passed in the headers",
            "schema": {
              "type": "string",
              "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Display user information",
            "schema": {
              "$ref": "#/components/schemas/User_info"
            }
          }
        }
      },
      "put": {
        "tags": ["user router"],
        "description": "Update profile information of user with id=userId.",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "headers",
            "required": "true",
            "description": " A header that sets the input type of the body",
            "schema": {
              "type": "string",
              "example": "form-data"
            }
          },
          {
            "name": "Authorization",
            "in": "headers",
            "required": "true",
            "description": "A jason-web-token generated on login and signup should be passed in request headers.",
            "schema": {
              "type": "string",
              "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQi"
            }
          },
          {
            "name": "Accept-Language",
            "in": "headers",
            "required": false,
            "description": "A header that sets language translation for responses.",
            "schema": {
              "type": "string",
              "example": "ki"
            }
          },
          {
            "name": "fullname",
            "in": "body",
            "required": false,
            "schema": {
              "type": "string",
              "example":"Gorba Koks"
            }
          },
          {
            "name": "username",
            "in": "body",
            "required": false,
            "schema": {
              "type": "string",
              "example":"warrior"
            }
          },
          {
            "name": "password",
            "in": "body",
            "required": false,
            "schema": {
              "type": "string",
              "example":"password"
            }
          },
          {
            "name": "profilePicture",
            "in": "body",
            "required": false,
            "description": "This should be a file of an imaage",
            "schema": {
              "type": "file",
              "example":"C:/users/user_name/folder_name/image.type"
            }
          }
        ],
        "consumes": [ "form-data"],
        "responses": {
          "200": {
            "description": "A message is displayed if updating is successfull and in language specified in headers.",
            "schema": {
              "type": "string",
              "example": "Imyirondoro yawe yahinduwe neza."
            }
          }
        }
      }
    },    
    "/api/v1/auth/siginIn": {
      "post": {
        "tags": ["user router"],
        "description": "user login",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "headers",
            "required": true,
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "Accept-Language",
            "in": "headers",
            "required": false,
            "description": "A header that sets language translation for responses.",
            "schema": {
              "type": "string",
              "example": "en"
            }
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "email": {
                  "type": "string",
                  "example": "strikers668@gmail.vom"
                },
                "password": {
                  "type": "string",
                  "example": "password"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "login successfully",
            "schema": {
              "properties": {
                "message": {
                  "type": "string",
                  "example": "successfully logged in"
                },
                "token": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoxLCJmdWxsbmFtZSI6InVzZXIgb25lIiwiZW1haWwiOiJ1c2Vy"
                }
              }
            }
          }
        }
      }
    },
    "api/user/login/google":{
      "get": {
        "tags": ["user router"],
        "description": "user login with google",
        "responses": {
          "200": {
            "description": "login successfully"
          }
        }
      }
    },
    "api/user/login/facebook":{
      "get": {
        "tags": ["user router"],
        "description": "user login with facebook",
        "responses": {
          "200": {
            "description": "login successfully"
          }
        }
      }
    },
    "/api/v1/user/signup": {
      "post": {
        "tags": ["user router"],
        "description": "user signuo",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Signer Up successfully",
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      }
    },
    "/api/v1/user/createRole": {
      "post": {
        "tags": ["Super admin router"],
        "description": "User admin can create new role in the system",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "headers",
            "required": "true",
            "description": " A header that sets the input type of the body",
            "schema": {
              "type": "string",
              "example": "form-data"
            }
          },
          {
            "name": "Authorization",
            "in": "headers",
            "required": true,
            "description": "A login jwt token should be passed in the headers to verify if it is SUPER_ADMIN",
            "schema": {
              "type": "string",
              "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQi"
            }
          },
          {
            "name": "Accept-Language",
            "in": "headers",
            "required": false,
            "description": "A header that sets language translation for responses.",
            "schema": {
              "type": "string",
              "example": "fr"
            }
          },
          {
            "name": "name",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string",
              "example":"Travel Administrator"
            }
          },
          {
            "name": "description",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string",
              "example":"This role helps for administating travels of company employees"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role must be created if the role exist in the system.",
            "schema": {
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Role is created in the system"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/assignRole": {
      "post": {
        "tags": ["Super admin router"],
        "description": "User admin can assign the existing role to any existing user with his/her email address",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "headers",
            "required": "true",
            "description": " A header that sets the input type of the body",
            "schema": {
              "type": "string",
              "example": "form-data"
            }
          },
          {
            "name": "Authorization",
            "in": "headers",
            "required": true,
            "description": "A login jwt token should be passed in the headers to verify if it is SUPER_ADMIN",
            "schema": {
              "type": "string",
              "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQi"
            }
          },
          {
            "name": "Accept-Language",
            "in": "headers",
            "required": false,
            "description": "A header that sets language translation for responses.",
            "schema": {
              "type": "string",
              "example": "fr"
            }
          },
          {
            "name": "email",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string",
              "example":"user1@example.com"
            }
          },
          {
            "name": "userRole",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string",
              "example":"Travel Administrator"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role must be assigned if the role already exist in the system and is assigned to the existing email in the systme.",
            "schema": {
              "properties": {
                "message": {
                  "type": "string",
                  "example": "role is successifully assigned"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/getRoles": {
      "get": {
        "tags": ["Super admin router"],
        "description": "Admin should get all the roles available in the system",
        "parameters": [
          {
            "name": "Authorization",
            "in": "headers",
            "required": "true",
            "description": "A login jwt token should be passed in the headers",
            "schema": {
              "type": "string",
              "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All availble roles must be fetched and display on the page for admin to see them.",
            "schema": {
              "properties": {
                "roles": [
                  {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "example": "Manager"
                    },
                    "description": {
                      "type": "string",
                      "example": "This is for managing trips"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2021-01-03T17:12:06.142Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "example": "2021-01-03T17:12:06.142Z"
                    }
                  },
                  {
                    "id": {
                      "type": "integer",
                      "example": 2
                    },
                    "name": {
                      "type": "string",
                      "example": "Travel Administrator"
                    },
                    "description": {
                      "type": "string",
                      "example": "This is for administtrating travels"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2021-01-03T17:12:06.142Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "example": "2021-01-03T17:12:06.142Z"
                    }
                  }
                  
                ]
              }
            }
          }
        }
      } 
    },
    "/api/v1/user/deleteRole/1": {
      "delete": {
        "tags": ["Super admin router"],
        "description": "Admin can be able to delete any role in the system using its id.",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "headers",
            "required": "true",
            "description": " A header that sets the input type of the body",
            "schema": {
              "type": "string",
              "example": "form-data"
            }
          },
          {
            "name": "Authorization",
            "in": "headers",
            "required": true,
            "description": "A jason-web-token generated on login and signup should be passed in request headers.",
            "schema": {
              "type": "string",
              "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQi"
            }
          },
          {
            "name": "Accept-Language",
            "in": "headers",
            "required": false,
            "description": "A header that sets language translation for responses.",
            "schema": {
              "type": "string",
              "example": "ki"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A message is displayed if deletion is successfull and in language specified in headers.",
            "schema": {
              "type": "string",
              "example": "uruhare rwasibwe neza."
            }
          }
        }
      }
    },
    "/api/v1/user/updateRole/1": {
      "put": {
        "tags": ["Super admin router"],
        "description": "Admin can be able to update any role in the system using its id.",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "headers",
            "required": "true",
            "description": " A header that sets the input type of the body",
            "schema": {
              "type": "string",
              "example": "form-data"
            }
          },
          {
            "name": "Authorization",
            "in": "headers",
            "required": true,
            "description": "A jason-web-token generated on login and signup should be passed in request headers.",
            "schema": {
              "type": "string",
              "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQi"
            }
          },
          {
            "name": "Accept-Language",
            "in": "headers",
            "required": false,
            "description": "A header that sets language translation for responses.",
            "schema": {
              "type": "string",
              "example": "en"
            }
          },
          {
            "name": "name",
            "in": "body",
            "required": false,
            "schema": {
              "type": "string",
              "example":"Travel Admin (updated)"
            }
          },
          {
            "name": "description",
            "in": "body",
            "required": false,
            "schema": {
              "type": "string",
              "example":"This is the role that is updated and responsible for administrating travels"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A message is displayed if the update is successfull and in language specified in headers.",
            "schema": {
              "type": "string",
              "example": "The is role updated successfully"
            }
          }
        }
      }
    },
    "/api/v1/user/getRole/2": {
      "get": {
        "tags": ["Super admin router"],
        "description": "Admin should get all the roles available in the system",
        "parameters": [
          {
            "name": "Authorization",
            "in": "headers",
            "required": "true",
            "description": "A login jwt token should be passed in the headers",
            "schema": {
              "type": "string",
              "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All availble roles must be fetched and display on the page for admin to see them.",
            "schema": {
              "properties": {
                "message": {
                  "type": "string",
                  "example": "role was fetched successfully"
                },
                "roleToFetch": {
                  "id": {
                    "type": "integer",
                  "example": 2
                  },
                  "name": {
                    "type": "string",
                    "example": "Senior Travel Administrator (Updated)"
                  },
                  "description": {
                   "type": "string",
                  "example": "this role is for administrating travels"
                  },
                  "createdAt": {
                   "type": "string",
                  "example": "2021-01-03T17:12:06.142Z"
                  },
                  "updatedAt":{
                    "type": "string",
                    "example": "2021-01-03T17:25:15.160Z"
                  } 
                }    
              }
            }
          }
        }
      } 
    }
  
  },
  "components": {
    "schemas": {
      "User": {
        "properties": {
          "username": {
            "type": "string",
            "example": "Warrior"
          },
          "email": {
            "type": "string",
            "example":"strikers668@gmail.vom"
          },
          "password": {
            "type": "string",
            "example":"kaka"
          },
          "role": {
            "type": "string",
            "example":"user"
          },
          "fullname": {
            "type": "string",
            "example":"Gorba Koks"
          }
        },
        "required": ["username", "email", "password"]
      },
      "User_info": {
        "properties": {
          "id": {
            "type": "number",
            "example": "30"
          },
          "fullname": {
            "type": "string",
            "example":"Gorba Koks"
          },
          "email": {
            "type": "string",
            "example": "strikers668@gmail.vom"
          },
          "username": {
            "type": "string",
            "example": "Warrior"
          },
          "role": {
            "type": "string",
            "example": "user"
          },
          "provider": {
            "type": "string",
            "example": "google"
          },
          "profilePicture": {
            "type": "string",
            "example": "http://res.cloudinary.com/**/**/image_name.png"
          },
          "createdAt": {
            "type": "string",
            "format": "date",
            "example": "2020-12-10T12:15:58.809Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date",
            "example": "2020-12-14T13:15:58.809Z"
          }
        }
      }
    }
  }
}
